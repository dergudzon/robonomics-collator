---
### SET FACTS
### Use inventory var 'host-collators-count' if it's defined, else use it from defaults
- name: "Set target collators count"
  set_fact:
    target_collators_count: "{{ hostvars[inventory_hostname]['target-collators-count'] | int }}"
  when: hostvars[inventory_hostname]['target-collators-count'] is defined
  tags: [ always ]

- debug: msg={{ target_collators_count }}
  tags: [ debug ]

### Use inventory var 'server-name' if it's defined, else use it from defaults
- name: "Set server_name"
  set_fact:
    server_name: "{{ hostvars[inventory_hostname]['server-name'] }}"
  when: hostvars[inventory_hostname]['server-name'] is defined
  tags: [ always ] 

- debug: msg={{ server_name }}
  tags: [ debug ]

- name: "Generate target collators index"
  set_fact: target_collators_index={{ range(1, target_collators_count|int + 1) | list }}
  tags: [always]
    
- debug: msg={{ target_collators_index }}
  tags: [ debug ]

- name: "Generate target collators users list"
  set_fact: target_collators_users={{ target_collators_users | default([]) + ['-'.join((USERNAME_AND_FILENAME_PREFIX, item|string))] }}
  loop: "{{ target_collators_index | list }}"
  tags: [ always ]

- debug: msg={{ target_collators_users }}
  tags: [ debug ]


- name: "Determine existing collators users list"
  shell: 'grep "{{ USERNAME_AND_FILENAME_PREFIX }}" /etc/group | cut -d: -f1 | tr \",\" \"\\n\"'
  changed_when: false 
  register: existing_collators_users
  tags: [ always ]

- debug: msg={{ existing_collators_users }}
  tags: [ debug ]


- name: "Generate unecessary users list"
  set_fact: unecessary_users={{ existing_collators_users.stdout_lines | difference(target_collators_users) }}
  tags: [ always ]

- name: "Unecessary users"
  debug: msg="{{ unecessary_users }}"
  tags: [ debug ]
### /SET FACTS


- name: "Stop all robonomics services"
  service:
    name: "{{ item }}.service"
    state: stopped
  loop: "{{ existing_collators_users.stdout_lines }}"
  tags: [ always, stop ]

- name: "Remove unnecessary users"
  ansible.builtin.user:
    name: "{{ item }}"
    state: absent
    remove: yes
  loop: "{{ unecessary_users }}"

- name: "Delete unecessary services"
  file:
    path: /etc/systemd/system/{{ item }}.service
    state: absent
  loop: "{{ unecessary_users }}"


## REMOVE
- block:
    - name: "Remove all collators users"
      ansible.builtin.user:
        name: "{{ item }}"
        state: absent
        remove: yes
      loop: "{{ existing_collators_users.stdout_lines }}"

    - name: "Delete all collators services"
      file:
        path: /etc/systemd/system/{{ item }}.service
        state: absent
      loop: "{{ existing_collators_users.stdout_lines }}"
  tags: [ never, remove ]
## /REMOVE


- name: "Create collators users"
  user:
    name: "{{ USERNAME_AND_FILENAME_PREFIX }}-{{ item }}"
    state: present
  loop: "{{ target_collators_index }}"


- name: Download Robonomics archive
  get_url: url=https://github.com/airalab/robonomics/releases/download/v{{ robonomics_version }}/robonomics-{{ robonomics_version }}-x86_64-unknown-linux-gnu.tar.gz dest=/root/

- name: Unpack Robonomics binary to /usr/bin/robonomics
  ansible.builtin.unarchive: src=/root/robonomics-{{ robonomics_version }}-x86_64-unknown-linux-gnu.tar.gz dest=/usr/bin/ remote_src=yes

- name: Template robonomics.service
  template:
    src: robonomics-collator.service.j2
    dest: /etc/systemd/system/{{ USERNAME_AND_FILENAME_PREFIX }}-{{ item }}.service
  loop: "{{ target_collators_index }}"

- name: "Reload systemd"
  shell: systemctl daemon-reload
  tags: [ always ]

- name: Remove relay db
  file:
    path: /home/{{ USERNAME_AND_FILENAME_PREFIX }}-{{ item }}/.local/share/robonomics/polkadot/chains/{{ chain_id }}/db
    state: absent 
  loop: "{{ target_collators_index }}"
  tags: [ never, remove_relaychain_db, remove_dbs ]

- name: Remove parachain db
  file:
    path: /home/{{ USERNAME_AND_FILENAME_PREFIX }}-{{ item }}/.local/share/robonomics/chains/earth/db
    state: absent
  loop: "{{ target_collators_index }}" 
  tags: [ never, remove_parachain_db, remove_dbs ]

- name: Start robonomics service
  service:
    name: "{{ USERNAME_AND_FILENAME_PREFIX }}-{{ item }}.service"
    state: restarted
    enabled: yes
  loop: "{{ target_collators_index }}"
  tags: [ start, restart, remove_relaychain_db, remove_parachain_db, remove_dbs ]
